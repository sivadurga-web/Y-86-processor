$date
	Sat Mar  6 13:22:54 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module fetch_tb $end
$var wire 145 ! D [144:0] $end
$var reg 1 " M_cnd $end
$var reg 4 # M_icode [3:0] $end
$var reg 64 $ M_valA [63:0] $end
$var reg 4 % W_icode [3:0] $end
$var reg 64 & W_valM [63:0] $end
$var reg 1 ' clk $end
$scope module call1 $end
$var wire 1 " M_cnd $end
$var wire 4 ( M_icode [3:0] $end
$var wire 64 ) M_valA [63:0] $end
$var wire 4 * W_icode [3:0] $end
$var wire 64 + W_valM [63:0] $end
$var wire 1 ' clk $end
$var wire 64 , f_pc [63:0] $end
$var reg 145 - D [144:0] $end
$var reg 4 . icode [3:0] $end
$var reg 4 / ifun [3:0] $end
$var reg 1 0 imem_error $end
$var reg 1 1 instr_valid $end
$var reg 64 2 predPC [63:0] $end
$var reg 4 3 rA [3:0] $end
$var reg 4 4 rB [3:0] $end
$var reg 1 5 stat $end
$var reg 64 6 valC [63:0] $end
$scope module pcselect $end
$var wire 1 " M_cnd $end
$var wire 4 7 M_icode [3:0] $end
$var wire 64 8 M_valA [63:0] $end
$var wire 4 9 W_icode [3:0] $end
$var wire 64 : W_valM [63:0] $end
$var wire 64 ; predPC [63:0] $end
$var reg 64 < f_pc [63:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 <
b0 ;
b0 :
b0 9
b0 8
b0 7
bx 6
x5
bx 4
bx 3
b0 2
11
00
bx /
bx .
bx -
b0 ,
b0 +
b0 *
b0 )
b0 (
0'
b0 &
b0 %
b0 $
b0 #
0"
bx !
$end
#5000
b10 ,
b10 <
b10110000001000010xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0000000000000000000000000000000000000000000000000000000000000010 !
b10110000001000010xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0000000000000000000000000000000000000000000000000000000000000010 -
15
b10 2
b10 ;
b110 .
b0 /
b10 4
b100 3
1'
#10000
0'
#15000
b11 ,
b11 <
b10000000011111111xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0000000000000000000000000000000000000000000000000000000000000011 !
b10000000011111111xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0000000000000000000000000000000000000000000000000000000000000011 -
b11 2
b11 ;
b0 .
b1111 4
b1111 3
1'
#20000
0'
